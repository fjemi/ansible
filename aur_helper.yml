# ansible playbook to install and remove aur helper packages
 
 - name: remove octopi, and install pamac/yay
   hosts: localhost
   become: yes
   tasks:
   
     - name: full system upgrade "pacman -Syu"
       pacman:
         update_cache: yes
         upgrade: yes
       register: system_upgrade
       ignore_errors: True
     - debug: 
         var: system_upgrade
       when: system_upgrade is failed
         
     - name: kill octopi and dependencies
       shell: pkill -f octopi
       register: kill_process
       ignore_errors: True
     - debug: 
         var: kill_process
       when: kill_process is failed
       
     - name: remove octopi package and dependencies
       pacman:
         name: "{{ item.name }}"
         state: absent
         force: yes
         recurse: yes         
       register: pkg_remove
       ignore_errors: True
       loop:
         - { name: 'octopi' }
         - { name: 'octopi-pacmanhelper' }
         - { name: 'octopi-repoeditor' }
         - { name: 'alpm-octopi-utils' }
         - { name: 'octopi-cachecleaner' }
         - { name: 'octopi-notifier-frameworks' }
     - debug: 
         var:
           pkg_remove.stdout
       when: pkg_remove is failed
       
     - name: install pamac and git packages
       pacman:
         name: "{{ item.name }}"
         state: present
       register: pkg_install
       ignore_errors: True
       loop:
         - { name: pamac }
         - { name: git }
         - { name: base-devel }
     - debug: 
         var: pkg_install
       when: pkg_install is failed 
       
     - name: clone the ansible-aur repository
       git:
         repo: "{{ item.repo }}"
         dest: ~/.ansible/plugins/modules/aur
         clone: no
         update: yes
       register: git_clone
       ignore_errors: True
       loop: 
         - { name: 'aur', repo: 'https://github.com/kewlfft/ansible-aur.git' }
     - debug: 
         var: git_clone
       when: git_clone is failed       
       
#     - name: install yay using makepkg
#       aur: 
#          name: yay 
#          use: makepkg 
#          skip_installed: true
#       become_user: aur_builder
#       register: out
#     - debug: 
#         var: out
#       when: out is failed 
